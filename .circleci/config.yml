version: 2.1

jobs:
  test-swift-package:
    executor: xcode-12
    steps:
      - checkout
      - run: swift test

  test-swift-5:
    executor: xcode-12
    steps:
      - setup
      - test-scripts
      - lint-pod:
          swift-version: "5.0"

  test-swift-4:
    executor: xcode-12
    steps:
      - setup
      - test-scripts:
          swift-version: "4.2"
      - lint-pod:
          swift-version: "4.2"

  carthage-build-swift-4:
    executor: xcode-12
    environment:
      XCODE_XCCONFIG_FILE: ./.circleci/SWIFT_5.0.xcconfig
    steps:
      - build-carthage

  carthage-build-swift-5:
    executor: xcode-12
    environment:
      XCODE_XCCONFIG_FILE: ./.circleci/SWIFT_4.2.xcconfig
    steps:
      - build-carthage

  deploy-to-cocoapods:
    executor: xcode-12
    steps:
      - checkout
      - restore-gems
      - run: bundle exec pod trunk push

executors:
  xcode-12:
    macos:
      xcode: "12.1.0"
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      HOMEBREW_NO_AUTO_UPDATE: 1
    shell: /bin/bash --login -eo pipefail

commands:
  setup:
    description: "Shared setup"
    steps:
      - checkout
      - restore-gems

  restore-gems:
    description: "Restore Ruby Gems"
    steps:
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.5" > ~/.ruby-version
      - restore_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
      - run: bundle check || bundle install --path vendor/bundle
      - save_cache:
          key: 1-gems-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  update-homebrew:
    description: "Update Homebrew"
    steps:
      - run:
          name: Update homebrew dependencies
          command: brew update 1> /dev/null 2> /dev/null

  update-carthage:
    description: "Update Carthage"
    steps:
      - run:
          name: Update Carthage
          command: brew outdated carthage || (brew uninstall carthage --force; HOMEBREW_NO_AUTO_UPDATE=1 brew install carthage --force-bottle)

  build-carthage:
    description: "Build Carthage"
    steps:
      - checkout
      - update-homebrew
      - update-carthage
      # Carthage does not work on Xcode 12 https://github.com/Carthage/Carthage/issues/3019
      # - run: carthage build --no-skip-current && for platform in Mac iOS tvOS; do test -d Carthage/Build/${platform}/Anchorage.framework || exit 1; done

  lint-pod:
    description: "Lints podspec with specified Swift version"
    parameters:
      swift-version:
        type: string
        default: "5.0"
    steps:
      - run: bundle exec pod lib lint --swift-version=<< parameters.swift-version >>

  test-scripts:
    description: "Runs test scripts with specified versions"
    parameters:
      swift-version:
        type: string
        default: "5.0"
      ios-version:
        type: string
        default: "14.2"
      tvos-version:
        type: string
        default: "13.4"
    steps:
      - run: ./scripts/iOS_demo_Swift.sh << parameters.ios-version >> << parameters.swift-version >>
      - run: ./scripts/iOS_Swift.sh << parameters.ios-version >> << parameters.swift-version >>
      - run: ./scripts/macOS_Swift.sh << parameters.swift-version >>
      - run: ./scripts/tvOS_Swift.sh << parameters.tvos-version >> << parameters.swift-version >>

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - test-swift-package:
          filters:
            tags:
              only: /.*/
      - test-swift-5:
          filters:
            tags:
              only: /.*/
      - test-swift-4:
          filters:
            tags:
              only: /.*/
      - carthage-build-swift-4:
          filters:
            tags:
              only: /.*/
      - carthage-build-swift-5:
          filters:
            tags:
              only: /.*/
      - deploy-to-cocoapods:
          context: CocoaPods
          requires:
            - test-swift-package
            - test-swift-5
            - test-swift-4
            - carthage-build-swift-4
            - carthage-build-swift-5
          filters:
            tags:
              only: /\d+(\.\d+)*(-.*)*/
            branches:
              ignore: /.*/
